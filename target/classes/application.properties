
# Hibernate and MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/user_management
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update

# Spring boot Actuator
# 1. Spring Boot Actuator module provides production-ready features such as monitoring, metrics and health checks.
# 2. The Spring Boot Actuator enables you to monitor the application using HTTP endpoints and JMX.	
# 3. Spring Boot provides a spring-boot-starter-actuator library to auto configure Actuator.
management.endpoints.web.exposure.include=*

# Actuator Info
management.info.env.enabled=true
info.app.name = CRUD Spring Boot Restful Web Services 
info.app.description = Crud Application to create Users using Spring Boot Restful Web Services
info.app.version = 1.0.0

# Health Info
#It will show the database components, diskspace and the status
management.endpoint.health.show-details=always

# Bean Info
# Bean endpoint shows all the beans registered in our application, including the beans you explicitly configured and those auto configured by Spring Boot.

# Conditions Info
# The conditions endpoint shows the auto configureation report, categorised into pasitiveMatches and negativeMatches

# The Mappings
# The mapping endpoint shows all the @RequestMapping paths declared in the application.
# Helpful for checking which request path will be handled by which controller method.

# The ConfigProps
# The configprops endpoint offers all the configuration properties defined by @ConfigurationProperties bean, including your configuration properties difined
# in the application.properties or YAML files.

# The Metrics
# The metrics endpoint shows various metrics about the current application such as how much memory it is using, how much memory is free, the size of the heap,
# used, the number of threads used and so on.


# The env
# The env endpoint exposes all the properties from the Spring's ConfigurableEnvironment interface, such as list of active profiles, application properties, system
# environment variables and so on.

# The threaddump
# Using threaddump endpoint, you can view your application's thread dumb with running threads details and JVM stack trace

# The loggers
# The loggers endpoint allows you to view and configure the log levels of your application at runtime.

# The shutdown
# The shutdown endpoint can be used to gracefully shut down the application.
# This endpoint not enabled by default. You can enable this endpoint by adding thhis property in application.properties file
management.endpoint.shutdown.enabled=true
# After adding the above property, we need to sent the HTTP POST request to below endpoint







